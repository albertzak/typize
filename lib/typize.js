// Generated by CoffeeScript 1.4.0
(function() {

  $(function() {
    var captureInput, click, keyup, sanitizeLines, stylizeLines, typize, view,
      _this = this;
    typize = $('#typize');
    view = $(window);
    if (localStorage.getItem('typize_content')) {
      typize.html(localStorage.getItem('typize_content'));
    }
    if (document.location.hash) {
      typize.html($.base64.decode(document.location.hash.substr(1)));
    }
    typize.css('min-height', $(window).height() - 170);
    typize.bind('input propertychange', keyup = function() {
      captureInput();
      localStorage.setItem('typize_content', typize.html());
      return document.location.hash = $.base64.encode(typize.html());
    });
    $('#b_reset').bind('click', click = function(c) {
      c.preventDefault();
      localStorage.clear();
      document.location.hash = '';
      return location.reload();
    });
    $('#b_clear').bind('click', click = function(c) {
      c.preventDefault();
      localStorage.clear();
      document.location.hash = '#CgkJCTxkaXYgY2xhc3M9ImhyIj48YnI+PC9kaXY+CgkJ';
      return location.reload();
    });
    typize.keydown = function(k) {
      if (k.keyCode === 13) {
        k.preventDefault();
      }
      if (k.keyCode === 13 && k.shiftKey) {
        return k.preventDefault();
      }
    };
    captureInput = function() {
      typize.lines = typize.children();
      return stylizeLines(sanitizeLines(typize.lines));
    };
    stylizeLines = function(lineArray) {
      var printDebug;
      return lineArray.forEach(printDebug = function(line, i) {
        var _ref;
        if ((0 < (_ref = line.text().length) && _ref <= 10)) {
          line.addClass('lt' + line.text().length);
        }
        if (line.text().length > 10) {
          line.addClass('gt10');
        }
        if (line.text().length === 0) {
          return line.addClass('hr');
        }
      });
    };
    sanitizeLines = function(lineArray) {
      var sanitize, sanitizedLines,
        _this = this;
      sanitizedLines = [];
      lineArray.each(sanitize = function(i, line) {
        line = $(line);
        line.removeClass();
        /*
        			Some attempts to fix Firefox's default behavior for the return key.
        			They break Chrome, so I've commented them out.
        */

        return sanitizedLines.push(line);
      });
      /*
      		The returned array's elements are jQuery references to the actual
      		DOM elements. Apply styling etc. via jQuery functions only.
      */

      return sanitizedLines;
    };
    return stylizeLines(sanitizeLines(typize.children()));
  });

}).call(this);
